import "std/string_buffer";
import "std/string";
import "std/string_view";
import "std/map";
import "std/array";

public func (this: u8) toJson(sb: *StringBuffer) {
    sb.append("%d", this)
}
public func (this: i8) toJson(sb: *StringBuffer) {
    sb.append("%d", this)
}
public func (this: u16) toJson(sb: *StringBuffer) {
    sb.append("%d", this)
}
public func (this: i16) toJson(sb: *StringBuffer) {
    sb.append("%d", this)
}
public func (this: u32) toJson(sb: *StringBuffer) {
    sb.append("%d", this)
}
public func (this: i32) toJson(sb: *StringBuffer) {
    sb.append("%d", this)
}
public func (this: u64) toJson(sb: *StringBuffer) {
    sb.append("%llu", this)
}
public func (this: i64) toJson(sb: *StringBuffer) {
    sb.append("%lld", this)
}
public func (this: usize) toJson(sb: *StringBuffer) {
    sb.append("%zu", this)
}

public func (this: f64) toJson(sb: *StringBuffer) {
    sb.append("%f", this)
}
public func (this: f32) toJson(sb: *StringBuffer) {
    sb.append("%f", this)
}

public func (this: bool) toJson(sb: *StringBuffer) {
    sb.append("%s", this ? "true" : "false")
}

public func (this: *const char) toJson(sb: *StringBuffer) {
    sb.append("\"%s\"", this)
}

public func (this: StringView) toJson(sb: *StringBuffer) {
    sb.append("\"%.*s\"", this.length, this.buffer)
}

public func (this: String) toJson(sb: *StringBuffer) {
    sb.append("\"%.*s\"", this.length, this.buffer)
}

public func (this: StringBuffer) toJson(sb: *StringBuffer) {
    sb.append("\"%.*s\"", this.length, this.buffer)
}

// public func (this: *T) toJson<T>(sb: *StringBuffer) {
//     var value = *this
//     value.toJson(sb)
// }

public func (this: *Map<K, V>) toJson<K, V>(sb: *StringBuffer) {
    if(!this) {
        sb.appendStrn("null", 4)
        return;
    }

    sb.append("{")
    var isFirst = true
    for(var it = this.iter(); it.hasNext();) {
        var entry = it.next()

        if(!isFirst) {
            sb.append(",")
        }
        isFirst = false

        entry.key.toJson(sb)
        sb.append(":")
        entry.value.toJson(sb)
    }
    sb.append("}")
}

public func (this: *Array<V>) toJson<V>(sb: *StringBuffer) {
    if(!this) {
        sb.appendStrn("null", 4)
        return;
    }

    sb.append("[")
    var isFirst = true
    for(var i = 0; i < this.size(); i+= 1) {
        var entry = this.get(i)
        if(!isFirst) {
            sb.append(",")
        }
        isFirst = false

        entry.toJson(sb)
    }
    sb.append("]")
}