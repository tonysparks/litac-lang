import "std/fs/tinydir"
import "std/system" // TODO: move the FS stuff into here!!
import "std/string/buffer"
import "std/libc"

public struct FileHandle {
    dir: tinydir_dir
    file: tinydir_file
}

public func (this: *FileHandle) openEx(path: *const char, len: i32) : bool {
    if(len > MAX_PATH) {
        return false;
    }

    var temp:[MAX_PATH]char;
    var str = StringBufferInit(temp, MAX_PATH, 0)
    str.format("%.*s", len, path)
    return this.open(str.cStr())
}

public func (this: *FileHandle) open(path: *const char) : bool {
    if(tinydir_open(&this.dir, path) == -1) {
        this.close()
        return false
    }

    return true
}


public func (this: *FileHandle) isFile() : bool {
    return this.file.is_reg
}

public func (this: *FileHandle) isDirectory() : bool {
    return this.file.is_dir
}

public func (this: *FileHandle) name() : *const char {
    return this.file.name
}

public func (this: *FileHandle) hasNext() : bool {
    return this.dir.has_next
}

public func (this: *FileHandle) next() : bool {
    var nextFileFound = false
    while(this.dir.has_next && !nextFileFound) {
        if(tinydir_readfile(&this.dir, &this.file) == -1) {
            return false
        }

        nextFileFound = true
        if(strncmp(this.file.name, "..", MAX_PATH) == 0) {
            nextFileFound = false;
        }

        if(strncmp(this.file.name, ".", MAX_PATH) == 0) {
            nextFileFound = false;
        }

        if(tinydir_next(&this.dir) == -1) {
            return false
        }
    }

    return nextFileFound;
}

public func (this: *FileHandle) close() : bool {
    tinydir_close(&this.dir)
    return true
}



@test
func testFileHandle() {

    var dir: tinydir_dir
    var file: tinydir_file
    var result = tinydir_open(&dir, "/home/tony/projects/ring-http/.pkgs/liburing")
    printf("Result: %d\n", result)

    while(dir.has_next) {
        result = tinydir_readfile(&dir, &file)
        printf("Read File Result: %d\n", result)
        printf("Name: '%s'\n", file.name)

        tinydir_next(&dir)
    }

    printf("~~~~~~~~\n")

    var handle: FileHandle{}
    if(!handle.open("/home/tony/projects/ring-http/.pkgs/liburing")) {
        printf("Failed to open\n")
    }

    printf("Name: '%s'\n", handle.name())

    while(handle.next()) {
        //if(handle.next())
        {
            printf("visiting '%s'", handle.name())

            if(handle.isDirectory()) {
                printf("/")
            }
            printf("\n")
        }
    }
}