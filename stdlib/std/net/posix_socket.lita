@raw("""
#include <sys/socket.h>
#include <netinet/in.h>
#include <unistd.h>
#include <arpa/inet.h>


typedef struct sockaddr sockaddr;
typedef struct sockaddr_in sockaddr_in;
typedef struct msghdr msghdr;
typedef struct iovec iovec;
""");

@foreign
public typedef void as socklen_t;

@foreign
public struct sockaddr {
    sa_family: i32
    sa_data: [14]char
}

@foreign
public struct sockaddr_in {
    sin_family: i32;     /* AF_INET */
    sin_port: u16;       /* Port number */
    sin_addr: in_addr;   /* IPv4 address */
};

@foreign
public struct in_addr {
    s_addr: u64
};

@foreign
public struct iovec {
   iov_base: *void
   iov_len: usize
}

@foreign
public struct msghdr {
    msg_iov: *iovec
    msg_iovlen: i32
}

@foreign
public const SO_DEBUG:i32
@foreign
public const SO_BROADCAST:i32
@foreign
public const SO_REUSEADDR:i32
@foreign
public const SO_KEEPALIVE:i32
@foreign
public const SO_LINGER:i32
@foreign
public const SO_OOBINLINE:i32
@foreign
public const SO_SNDBUF:i32
@foreign
public const SO_RCVBUF:i32
@foreign
public const SO_DONTROUTE:i32
@foreign
public const SO_RCVLOWAT:i32
@foreign
public const SO_RCVTIMEO:i32
@foreign
public const SO_SNDLOWAT:i32
@foreign
public const SO_SNDTIMEO:i32

@foreign
public const SOL_SOCKET:i32


@foreign
public const MSG_CONFIRM:i32
@foreign
public const MSG_DONTROUTE:i32
@foreign
public const MSG_DONTWAIT:i32
@foreign
public const MSG_EOR:i32
@foreign
public const MSG_MORE:i32
@foreign
public const MSG_NOSIGNAL:i32
@foreign
public const MSG_OOB:i32
@foreign
public const MSG_FASTOPEN:i32

@foreign
public func strerror(errnum: i32) : *const char;

@foreign
public func socket(domain: i32, type: i32, protocol: i32) : i32;

@foreign
public func bind(socket: i32, addr: *sockaddr, addrlen: socklen_t) : i32;

@foreign
public func accept(socket: i32, addr: *sockaddr, addrlen: *socklen_t) : i32;

@foreign
public func listen(socket: i32, backlog: i32) : i32;

@foreign
public func recv(socket: i32, buf: *void, len: usize, flags: i32) : i64;

@foreign
public func send(socket: i32, buf: *void, len: usize, flags: i32) : i64;

@foreign
public func setsockopt(socket: i32, level: i32, option_name: i32, option_value: *const void, option_len: socklen_t) : i32;

@foreign
public func close(socket: i32) : i32;

@foreign
public const AF_INET: i32;

@foreign
public const AF_INET6: i32;

@foreign
public const SOCK_STREAM: i32;

@foreign
public const SOCK_DGRAM: i32;

@foreign
public const SOCK_NONBLOCK: i32;

@foreign
public const INET_ADDRSTRLEN: i32;

@foreign
public const INADDR_ANY: i32;

@foreign
public func htonl(hostlong: u32) : u32;

@foreign
public func htons(hostshort: u16) : u16;

@foreign
public func ntohl(netlong: u32) : u32;

@foreign
public func ntohs(netshort: u16) : u16;

@foreign
public func inet_pton(af: i32, src: *const char, dst: *void): i32;

@foreign
public func inet_ntop(af: i32, src: *const void, dst: *void, size: socklen_t): *const char;
