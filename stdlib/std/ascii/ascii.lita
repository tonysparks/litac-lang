// ASCII utility functions
import "std/assert"

const WHITESPACE = [256]bool {
    [9] = true,
    [10] = true,
    [11] = true,
    [12] = true,
    [13] = true,
    [32] = true,
}

const HEX = [256]i32 {
    // digits '0'..'9'
    ['0'] = 0, ['1'] = 1, ['2'] = 2, ['3'] = 3,
    ['4'] = 4, ['5'] = 5, ['6'] = 6, ['7'] = 7,
    ['8'] = 8, ['9'] = 9,

    // uppercase 'A'..'F'
    ['A'] = 10, ['B'] = 11, ['C'] = 12,
    ['D'] = 13, ['E'] = 14, ['F'] = 15,

    // lowercase 'a'..'f'
    ['a'] = 10, ['b'] = 11, ['c'] = 12,
    ['d'] = 13, ['e'] = 14, ['f'] = 15,
}

public func (this: char) isWhitespace() : bool {
    return WHITESPACE[this & 0xFF]
}

public func (this: char) isNumeric() : bool {
    return this > 47 && this < 58
}

public func (this: char) isAlphabetic() : bool {
    return (this > 64 && this < 91) ||
           (this > 96 && this < 123);
}

public func (this: char) isAlphanumeric() : bool {
    return this.isNumeric() || this.isAlphabetic();
}

public func (this: char) asHex() : i32 {
    return HEX[this]
}

@test
func testWhitespace() {
    assert(' '.isWhitespace() == true)
    assert('\t'.isWhitespace() == true)
    assert('\n'.isWhitespace() == true)
    assert('\r'.isWhitespace() == true)


    var c = (-1) as (char)
    assert(c.isWhitespace() == false)

    var m = (300) as (char)
    assert(m.isWhitespace() == false)

    assert('x'.isWhitespace() == false)
    assert(char_isWhitespace(' ') == true)
}